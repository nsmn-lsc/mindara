# Generated by Django 5.2.4 on 2025-08-06 20:47

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CategoriaEvento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre único para la categoría del evento",
                        max_length=100,
                        unique=True,
                        verbose_name="Nombre de la categoría",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción detallada de la categoría",
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#06A77D",
                        help_text="Color en formato hexadecimal para identificar la categoría",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "activa",
                    models.BooleanField(
                        default=True,
                        help_text="Si la categoría está disponible para usar",
                        verbose_name="Activa",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "Categoría de Evento",
                "verbose_name_plural": "Categorías de Eventos",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Evento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre_evento",
                    models.CharField(
                        default="Evento sin nombre",
                        help_text="Nombre descriptivo del evento",
                        max_length=200,
                        verbose_name="Nombre del evento",
                    ),
                ),
                (
                    "objetivo",
                    models.TextField(
                        default="Por definir",
                        help_text="Objetivo principal del evento",
                        verbose_name="Objetivo",
                    ),
                ),
                (
                    "fecha_evento",
                    models.DateField(
                        default="2025-08-06",
                        help_text="Día en que se realizará el evento",
                        verbose_name="Fecha del evento",
                    ),
                ),
                (
                    "hora_evento",
                    models.TimeField(
                        default="09:00",
                        help_text="Hora de inicio del evento",
                        verbose_name="Hora del evento",
                    ),
                ),
                (
                    "duracion",
                    models.CharField(
                        choices=[
                            ("0.5", "30 minutos"),
                            ("1", "1 hora"),
                            ("1.5", "1.5 horas"),
                            ("2", "2 horas"),
                            ("3", "3 horas"),
                            ("4", "4 horas"),
                            ("6", "6 horas"),
                            ("8", "8 horas (día completo)"),
                            ("otro", "Otra duración"),
                        ],
                        default="2",
                        help_text="Duración estimada del evento",
                        max_length=10,
                        verbose_name="Duración",
                    ),
                ),
                (
                    "duracion_personalizada",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text='Solo si seleccionaste "Otra duración"',
                        max_digits=4,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.25)],
                        verbose_name="Duración personalizada (horas)",
                    ),
                ),
                (
                    "sede",
                    models.CharField(
                        default="Por definir",
                        help_text="Lugar donde se realizará el evento",
                        max_length=300,
                        verbose_name="Sede",
                    ),
                ),
                (
                    "link_maps",
                    models.URLField(
                        blank=True,
                        help_text="Enlace a Google Maps de la ubicación",
                        verbose_name="Link de Google Maps",
                    ),
                ),
                (
                    "aforo",
                    models.PositiveIntegerField(
                        default=10,
                        help_text="Número máximo de participantes",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Aforo",
                    ),
                ),
                (
                    "participantes",
                    models.TextField(
                        blank=True,
                        help_text="Lista de participantes esperados (uno por línea o separados por comas)",
                        verbose_name="Participantes",
                    ),
                ),
                (
                    "etapa",
                    models.CharField(
                        choices=[
                            ("planificacion", "Planificación"),
                            ("revision", "Revisión"),
                            ("confirmado", "Confirmado"),
                            ("cancelado", "Cancelado"),
                            ("pospuesto", "Pospuesto"),
                        ],
                        default="planificacion",
                        help_text="Etapa actual del evento",
                        max_length=20,
                        verbose_name="Etapa",
                    ),
                ),
                (
                    "prioridad",
                    models.CharField(
                        choices=[
                            ("baja", "Baja"),
                            ("media", "Media"),
                            ("alta", "Alta"),
                            ("urgente", "Urgente"),
                        ],
                        default="media",
                        help_text="Nivel de prioridad del evento",
                        max_length=20,
                        verbose_name="Prioridad",
                    ),
                ),
                (
                    "carpeta_ejecutiva",
                    models.BooleanField(
                        default=False,
                        help_text="Indica si el evento incluye una presentación PowerPoint",
                        verbose_name="¿Tiene carpeta ejecutiva?",
                    ),
                ),
                (
                    "carpeta_ejecutiva_liga",
                    models.URLField(
                        blank=True,
                        help_text="Enlace a la presentación en Google Drive, OneDrive, etc.",
                        verbose_name="Liga de carpeta ejecutiva",
                    ),
                ),
                (
                    "compromisos",
                    models.TextField(
                        blank=True,
                        help_text="Compromisos y acuerdos derivados del evento",
                        verbose_name="Compromisos",
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True,
                        help_text="Notas adicionales y observaciones sobre el evento",
                        verbose_name="Observaciones",
                    ),
                ),
                (
                    "marca_temporal",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Marca temporal",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de actualización"
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        help_text="Usuario responsable del evento",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="eventos_responsable",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario responsable",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evento",
                "verbose_name_plural": "Eventos",
                "ordering": ["-fecha_evento", "-hora_evento"],
                "indexes": [
                    models.Index(
                        fields=["fecha_evento"], name="eventos_eve_fecha_e_5c23b6_idx"
                    ),
                    models.Index(
                        fields=["usuario"], name="eventos_eve_usuario_e69198_idx"
                    ),
                    models.Index(fields=["etapa"], name="eventos_eve_etapa_bfa70d_idx"),
                    models.Index(
                        fields=["prioridad"], name="eventos_eve_priorid_554659_idx"
                    ),
                ],
            },
        ),
    ]
